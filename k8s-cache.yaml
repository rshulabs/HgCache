apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cache-dep
  name: cache-dep

spec:
  replicas: 2
  selector:
    matchLabels:
      app: cache-dep

  template:
    metadata:
      labels:
        app: cache-dep
    spec:
      containers:
        - image: rshulabs/hugecache:v1.0.0
          name: cache
          ports:
            - containerPort: 8791
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cache-dep
  name: cache-svc

spec:
  ports:
    - name: http80
      port: 8791
      protocol: TCP
      targetPort: 8791
      #nodePort: 30088

  selector:
    app: cache-dep
  #type: NodePort

---
# nginx

apiVersion: v1
kind: ConfigMap
metadata:
  name: ngx-conf

data:
  default.conf: |
    server {
      listen 80;
      #default_type text/html;
      location / {
        # 如果是文件只显示内容
        #add_header Content-Disposition inline;
        # 只显示内容
        add_header Content-Type text/plain;
        # 当访问Nginx服务器的/路径时，请求会被代理到后端服务
        proxy_pass http://cache-svc:8791; 
        #proxy_pass http://cache-svc:8791/api; 
        proxy_set_header Host $host; 
        proxy_set_header X-Real-IP $remote_addr; 
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ngx-dep
  name: ngx-dep

spec:
  replicas: 1
  selector:
    matchLabels:
      app: ngx-dep

  template:
    metadata:
      labels:
        app: ngx-dep
    spec:
      volumes:
        - name: ngx-vol
          configMap:
            name: ngx-conf
      containers:
        - image: nginx:alpine
          name: nginx
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: ngx-vol

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ngx-dep
  name: ngx-svc

spec:
  ports:
    - name: http80
      port: 80
      protocol: TCP
      targetPort: 80
      nodePort: 30088

  selector:
    app: ngx-dep
  type: NodePort
